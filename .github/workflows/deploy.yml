# Custom workflow to deploy Jekyll + Tailwind CSS
name: Deploy Jekyll + Tailwind CSS with GitHub Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - run: echo "Building branch ${{ github.ref }}..."
      - name: Checkout
        uses: actions/checkout@v4
      # Sets up Ruby and runs `bundle install`
      - name: Setup Ruby Pkgs
        uses: ruby/setup-ruby-pkgs@v1.33.2
        with:
          # See https://github.com/ruby/setup-ruby/blob/master/README.md and
          # https://github.com/ruby/setup-ruby/blob/master/action.yml for all below.
          # Used by ruby/setup-ruby. Ruby version.
          # A value of 'none' will bypass running ruby/setup-ruby.
          ruby-version: '3.1'
          bundler-cache: true
      - name: Setup Node.js environment
        uses: actions/setup-node@v4.0.4
        with:
          # Version Spec of the version to use. Examples: 12.x, 10.15.1, >=10.15.0.
          node-version: '>=9.2.0'
          # File containing the version Spec of the version to use.  Examples: package.json, .nvmrc, .node-version, .tool-versions.
          node-version-file: package.json
          # Used to specify a package manager for caching in the default directory. Supported values: npm, yarn, pnpm.
          cache: 'npm'
      - run: npm install
      - name: Setup Pages
        uses: actions/configure-pages@v5
      # Build Jekyll & Tailwind
      - run: npm run prod
      # Upload generated files under _site
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
      - run: echo "Build status ${{ job.status }}."

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
