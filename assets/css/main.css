@tailwind base;
@tailwind components;
@tailwind utilities;

@supports (font-variation-settings: normal) {
    @font-face {
        font-family: "Inter";
        font-style: normal;
        font-weight: 100 900;
        font-display: swap;
        src: url("../fonts/Inter.ttf") format("ttf");
        font-named-instance: "Regular";
    }

    @font-face {
        font-family: "Inter";
        font-style: italic;
        font-weight: 100 900;
        font-display: swap;
        src: url("../fonts/Inter-Italic.ttf") format("ttf");
        font-named-instance: "Italic";
    }
}

@media (prefers-reduced-motion: no-preference) {
    @keyframes move-background {
        0% {
            background-position: 0% 0%;
        }

        25% {
            background-position: 100% 0%;
        }

        50% {
            background-position: 100% 100%;
        }

        75% {
            background-position: 0% 100%;
        }

        100% {
            background-position: 0% 0%;
        }
    }

    @-webkit-keyframes move-background {
        0% {
            background-position: 0% 0%;
        }

        25% {
            background-position: 100% 0%;
        }

        50% {
            background-position: 100% 100%;
        }

        75% {
            background-position: 0% 100%;
        }

        100% {
            background-position: 0% 0%;
        }
    }

    @-moz-keyframes move-background {
        0% {
            background-position: 0% 0%;
        }

        25% {
            background-position: 100% 0%;
        }

        50% {
            background-position: 100% 100%;
        }

        75% {
            background-position: 0% 100%;
        }

        100% {
            background-position: 0% 0%;
        }
    }
}

@layer components {
    .inactive-theme-icon {
        opacity: 0;

        @media (prefers-reduced-motion: no-preference) {
            transform: translateY(20%) rotateZ(50deg);
            transition: all 1s ease-in-out;
        }
    }

    .light-theme-gradient {
        background-color: #38bdf8;
        background-image:
            radial-gradient(at 99% 98%, #818cf8 0px, transparent 50%),
            radial-gradient(at 42% 41%, #67e8f9 0px, transparent 50%),
            radial-gradient(at 60% 44%, #2dd4bf 0px, transparent 50%),
            radial-gradient(at 99% 98%, #818cf8 0px, transparent 50%),
            radial-gradient(at 42% 41%, #38bdf8 0px, transparent 50%),
            radial-gradient(at 60% 44%, #2dd4bf 0px, transparent 50%);

        background-size: 200% 200%;
        animation: move-background 7s ease infinite;
        -moz-animation: move-background 7s ease infinite;
        -webkit-animation: move-background 7s ease infinite;
    }

    .dark-theme-gradient {
        background-color: hsla(266, 80%, 83%, 1);
        background-image:
            radial-gradient(at 30% 11%, hsla(32, 100%, 77%, 1) 0px, transparent 50%),
            radial-gradient(at 68% 43%, hsla(310, 61%, 76%, 1) 0px, transparent 50%),
            radial-gradient(at 82% 63%, hsla(266, 80%, 83%, 1) 0px, transparent 50%),
            radial-gradient(at 26% 65%, hsla(16, 100%, 77%, 1) 0px, transparent 50%),
            radial-gradient(at 42% 72%, hsla(310, 61%, 76%, 1) 0px, transparent 50%),
            radial-gradient(at 60% 10%, hsla(17, 100%, 77%, 1) 0px, transparent 50%);

        background-size: 200% 200%;
        animation: move-background 7s ease infinite;
        -moz-animation: move-background 7s ease infinite;
        -webkit-animation: move-background 7s ease infinite;
    }

    .theme-gradient {
        @apply light-theme-gradient dark:dark-theme-gradient;
    }

    /* parent element must have a non-static position (ex. position: relative) for this to work */
    .award-shadow::after {
        @apply theme-gradient;
        @apply content-[''] z-[-1] absolute top-2 left-0 right-0 h-full w-full blur-xl scale-x-75 transition-opacity;
    }

    /* parent element must have a non-static position (ex. position: relative) for this to work */
    .circle-component {
        @apply absolute w-[1.2rem] h-[1.2rem] border-2 rounded-full bg-base-100 z-40;
    }

    /* use the classes below together with .circle-component */
    .circle-upper-left {
        @apply top-0 translate-x-[-11px] translate-y-[-1px];
    }

    .circle-bottom-left {
        @apply bottom-0 translate-x-[-11px] translate-y-[1px];
    }

    .circle-upper-right {
        @apply top-0 translate-x-[12px] translate-y-[-1px];
    }

    .badge-statistic {
        @apply bg-base-200 shadow-md p-3;
    }

    /* From Uiverse.io by barisdogansutcu */
    .content {
        display: flex;
        flex-direction: column;
        justify-content: flex-start;
        gap: 15px;
        width: 300px;
        height: 20rem;
        position: relative;
        overflow: hidden;
        border-radius: 14px;
    }

    .content::before {
        content: "";
        position: absolute;
        left: 0%;
        top: 50%;
        transform: translateY(-50%);
        bottom: 0;
        width: 40px;
        height: 20rem;
        background-image: linear-gradient(90deg, #0000001c, transparent);
        z-index: 2;
        border-radius: 10px 0 0 10px;
    }

    .content::after {
        content: "";
        position: absolute;
        right: 0%;
        top: 50%;
        transform: translateY(-50%);
        bottom: 0;
        width: 40px;
        height: 20rem;
        background-image: linear-gradient(-90deg, #0000001c, transparent);
        z-index: 9;
        border-radius: 0 10px 10px 0;
    }

    .basic-marquee {
        display: flex;
        align-items: center;
        justify-content: center;
        gap: 10px;
        width: 100%;
        animation: marquee 15s linear infinite;
    }

    /* .basic-marquee .button {
    transition: all 0.3s ease;
  }
  .basic-marquee .button:hover {
    transform: scale(1.1);
    cursor: pointer;
  } */
    .benefits {
        display: flex;
        flex-direction: column;
        justify-content: center;
        gap: 15px;
        min-width: 900px;
        height: 100%;
        white-space: nowrap;
        overflow: hidden;
        position: absolute;
        inset: 0;
    }

    @keyframes marquee {
        0% {
            transform: translateX(-10%);
        }

        100% {
            transform: translateX(-50%);
        }
    }

    .basic-marquee svg {
        width: 40px;
    }

    /* Marquee styles */
    .marquee {
        --gap: 1rem;
        position: relative;
        display: flex;
        overflow: hidden;
        user-select: none;
        gap: var(--gap);
    }

    .marquee__content {
        flex-shrink: 0;
        display: flex;
        justify-content: space-around;
        gap: var(--gap);
        min-width: 100%;
        animation: scroll 10s linear infinite;
    }

    @keyframes scroll {
        from {
            transform: translateX(0);
        }

        to {
            transform: translateX(calc(-100% - var(--gap)));
        }
    }

    /* Pause animation when reduced-motion is set */
    @media (prefers-reduced-motion: reduce) {
        .marquee__content {
            animation-play-state: paused !important;
        }
    }

    /* Reverse animation */
    .marquee--reverse .marquee__content {
        animation-direction: reverse;
    }

    /* Attempt to size parent based on content. Keep in mind that the parent width is equal to both content containers that stretch to fill the parent. */
    .marquee--fit-content {
        max-width: fit-content;
    }

    /* A fit-content sizing fix: Absolute position the duplicate container. This will set the size of the parent wrapper to a single child container. Shout out to Olavi's article that had this solution 👏 @link: https://olavihaapala.fi/2021/02/23/modern-marquee.html  */
    .marquee--pos-absolute .marquee__content:last-child {
        position: absolute;
        top: 0;
        left: 0;
    }

    /* Enable position absolute animation on the duplicate content (last-child) */
    .enable-animation .marquee--pos-absolute .marquee__content:last-child {
        animation-name: scroll-abs;
    }

    @keyframes scroll-abs {
        from {
            transform: translateX(calc(100% + var(--gap)));
        }

        to {
            transform: translateX(0);
        }
    }

    /* Other page demo styles */
    .marquee__content>* {
        flex: 0 0 auto;
        color: white;
        text-align: center;
    }

    .marquee {
        border: 2px dashed lightgray;
    }
}